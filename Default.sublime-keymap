[

{
    // Default variant.
    "keys": ["*"],
    "command": "run_macro_file",
    "args": {"file": "res://Packages/Fluent/Insert Default Variant.sublime-macro"},
    "context": [
        {"key": "setting.auto_indent", "operator": "equal", "operand": true},
        {"key": "selector", "operand": "meta.variant-list.fluent - string.unquoted.fluent", "match_all": true},
        {"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
        {"key": "preceding_text", "operator": "regex_contains", "operand": "^(?: +|\t[ \t]* )$", "match_all": true},
    ],
}, {
    // Default variant at BOL.
    "keys": ["*"],
    "command": "insert_snippet",
    "args": {"contents": "*[${1:other}]"},
    "context": [
        {"key": "setting.auto_indent", "operator": "equal", "operand": true},
        {"key": "selector", "operand": "meta.variant-list.fluent - string.unquoted.fluent", "match_all": true},
        {"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
        {"key": "preceding_text", "operator": "regex_contains", "operand": "^$", "match_all": true},
    ],
}, {
    // Newline after selector.
    "keys": ["enter"],
    "command": "run_macro_file",
    "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"},
    "context": [
        {"key": "setting.auto_indent", "operator": "equal", "operand": true},
        {"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
        {"key": "preceding_text", "operator": "regex_contains", "operand": "->$", "match_all": true},
        {"key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true},
    ],
}, {
    // Newline after selector.
    "keys": ["shift+enter"],
    "command": "run_macro_file",
    "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"},
    "context": [
        {"key": "setting.auto_indent", "operator": "equal", "operand": true},
        {"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
        {"key": "preceding_text", "operator": "regex_contains", "operand": "->$", "match_all": true},
        {"key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true},
    ],
},

]
